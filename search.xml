<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>浏览器兼容性问题</title>
      <link href="/2023/08/15/browser-compatibility/"/>
      <url>/2023/08/15/browser-compatibility/</url>
      
        <content type="html"><![CDATA[<h3 id="chrome-中音视频无法自动播放"><a href="#chrome-中音视频无法自动播放" class="headerlink" title="chrome 中音视频无法自动播放"></a>chrome 中音视频无法自动播放</h3><p>在 chrome 中音视频自动播放报错问题 <a href="/2023/08/15/audio-error-in-chrome/" title="在chrome中音视频自动播放报错问题">link</a></p>]]></content>
      
      
      <categories>
          
          <category> broswer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> compatibility </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在chrome中音视频自动播放报错问题</title>
      <link href="/2023/08/15/audio-error-in-chrome/"/>
      <url>/2023/08/15/audio-error-in-chrome/</url>
      
        <content type="html"><![CDATA[<p>在谷歌中使用 audio 播放音频，但在尝试通过代码控制自动播放时报如下错误：</p><img src="/2023/08/15/audio-error-in-chrome/audio.png" class title="audio-error"><p>意思是必须在用户与页面进行交互后，才能触发自动播放。这是因为出于对用户体验以及节流方面的考虑， chrome66 之后的版本限制了 audio 元素和 video 元素的自动播放。<br>在此记录两种解决方案：</p><h3 id="视频自动播放"><a href="#视频自动播放" class="headerlink" title="视频自动播放"></a>视频自动播放</h3><p>对于视频文件，若只需要自动播放视频内容而对声音没有要求，加上 muted 属性可解决</p><img src="/2023/08/15/audio-error-in-chrome/muted.png" class title="muted"><h3 id="音频自动播放"><a href="#音频自动播放" class="headerlink" title="音频自动播放"></a>音频自动播放</h3><p>此方法需要修改浏览器配置，步骤如下</p><ol><li>打开浏览器设置 &gt;&gt; “隐私和安全”<img src="/2023/08/15/audio-error-in-chrome/set1.png" class title="setting"></li><li>进入网站设置<img src="/2023/08/15/audio-error-in-chrome/set2.png" class title="setting"></li><li>更多内容设置 &gt;&gt; 声音<img src="/2023/08/15/audio-error-in-chrome/set3.png" class title="setting"></li><li>添加允许播放声音的网站地址<img src="/2023/08/15/audio-error-in-chrome/set4.png" class title="setting"></li></ol>]]></content>
      
      
      <categories>
          
          <category> broswer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> compatibility </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css-实现不同尺寸的图片固定比例显示</title>
      <link href="/2023/08/15/css-make-img-equal-ratio/"/>
      <url>/2023/08/15/css-make-img-equal-ratio/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git 相关配置</title>
      <link href="/2023/08/11/git-config/"/>
      <url>/2023/08/11/git-config/</url>
      
        <content type="html"><![CDATA[<h3 id="ssh-配置"><a href="#ssh-配置" class="headerlink" title="ssh 配置"></a>ssh 配置</h3><blockquote><p>ssh 是一种加密协议，使用 ssh 连接远程仓库，可以实现免密登录<br>以下命令均在 git bash 中执行</p></blockquote><ol><li>配置用户名和邮箱</li></ol><pre class="line-numbers language-none"><code class="language-none"># 如果针对单个git仓库配置，可将 --global 改为 --local$ git config --global user.name &quot;用户名&quot;$ git config --global user.email &quot;邮箱&quot;# 检查配置$ git config user.name$ git config user.email<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>生成公钥和私钥</li></ol><pre class="line-numbers language-none"><code class="language-none">$ ssh-keygen -t rsa -C &quot;邮箱&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>几次回车后会在指定目录生成.ssh 文件夹(一般在 C 盘的用户文件夹下)，其中 <code>id_ras</code>为私钥文件，<code>id_rsa.pub</code>为公钥文件</p><ol start="3"><li><p>在 github 配置公钥</p><p>(1) 打开<code>id_rsa.pub</code>文件并复制内容<br>(2) 进入 github 个人 settings，选择<code>SSH and GPG keys</code><br>(3) 点击 <code>New SSH key</code>，将之前复制的公钥粘贴到 key 对应文本框(title 自己命名)</p></li><li><p>回到 git bash 检查 ssh 配置</p></li></ol><pre class="line-numbers language-none"><code class="language-none">$ ssh -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输出结果如下为配置成功</p><img src="/2023/08/11/git-config/git.jpg" class title="img">]]></content>
      
      
      <categories>
          
          <category> config </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于hexo搭建博客记录</title>
      <link href="/2023/08/10/hexo-test/"/>
      <url>/2023/08/10/hexo-test/</url>
      
        <content type="html"><![CDATA[<blockquote><p>第一次用 <a href="https://hexo.io/zh-cn/docs/">hexo</a>，在此记录搭建过程中有用的 tips 和踩的坑<br>主题：<a href="https://github.com/Ares-X/hexo-theme-freemind.bithack">freemind.bithack</a></p></blockquote><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p>新建文章</p><pre class="line-numbers language-none"><code class="language-none"># layout#   post source&#x2F;_posts#   page source#   draft source&#x2F;_drafts$ hexo new [layout] &lt;title&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将草稿类型的文件移到 source&#x2F;_posts</p><pre class="line-numbers language-none"><code class="language-none">$ hexo publish [layout] &lt;title&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成静态文件</p><pre class="line-numbers language-none"><code class="language-none">$ hexo generate&#x2F;&#x2F; 简写$ hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>启动服务器</p><pre class="line-numbers language-none"><code class="language-none">$ hexo server$ hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>本地调试，支持热更新</p><pre class="line-numbers language-none"><code class="language-none">$ hexo s -g --debug<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>部署网站</p><pre class="line-numbers language-none"><code class="language-none">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="hexo-g-部署报错-部署到-github"><a href="#hexo-g-部署报错-部署到-github" class="headerlink" title="hexo g 部署报错(部署到 github)"></a>hexo g 部署报错(部署到 github)</h3><ol><li>使用用户名+密码登录报错<br>2021.8.13 开始对 git 操作不再支持通过账户+密码来验证，必须基于 token 验证</li></ol><pre class="line-numbers language-none"><code class="language-none">开个坑，后期有空补充<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>hexo 配置问题</li></ol><pre class="line-numbers language-none"><code class="language-none"># repo 应为git仓库的ssh链接deploy:  type: git  repo: git@github.com:github-username&#x2F;github-username.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="点击导航显示无法访问的问题"><a href="#点击导航显示无法访问的问题" class="headerlink" title="点击导航显示无法访问的问题"></a>点击导航显示无法访问的问题</h3><p>错误情况</p><ul><li>使用命令创建 Tags，会在 source 下生成 tags&#x2F;index.md，完成 layout 等配置后点击导航 Tags，此时跳转路径为 &#x2F;tags，页面显示无法访问，查看该主题的 demo 发现跳转路径为 &#x2F;tags&#x2F;</li><li>手动将地址栏的地址改为 &#x2F;tags&#x2F;，页面正常</li></ul><p>修改尝试</p><ul><li>直接在 source 下创建 tags.md 文件，并添加下面内容</li></ul><pre class="line-numbers language-none"><code class="language-none">---title: tagsdate: 2023-08-10 11:16:46type: &#39;tag&#39;layout: &#39;tags&#39;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>此时点击导航正常跳转 (原因不明，后期找到原因再补充)</li></ul><p><em>(部署后发现即使没有创建 archives 文件，跳转也不会报错，且路由后加上了’&#x2F;‘，继续跟踪这个问题)</em></p><h3 id="引入图片无法显示"><a href="#引入图片无法显示" class="headerlink" title="引入图片无法显示"></a>引入图片无法显示</h3><ul><li>参考<a href="https://cloud.tencent.com/developer/article/2171899">文章</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> config </category>
          
      </categories>
      
      
        <tags>
            
            <tag> log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello</title>
      <link href="/2023/07/31/hello-world/"/>
      <url>/2023/07/31/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to my world.<br>Have a nice day.</p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
